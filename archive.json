{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-10-05T01:23:40.750058+00:00",
  "repo": "core-wg/uri-path-abbrev",
  "labels": [
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "for-bis",
      "description": "If there's ever a need for repeated opt, the document introducing them can pick this up or revert it",
      "color": "03f293"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOPRf_yM7CR9hU",
      "title": "Option name",
      "url": "https://github.com/core-wg/uri-path-abbrev/issues/1",
      "state": "OPEN",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [
        "chrysn"
      ],
      "labels": [],
      "body": "MCR [on list](https://mailarchive.ietf.org/arch/msg/core/8JQplbquf6gBp1lDmpSZId4eGlI):\n\n* Uri-Short-Path for consistency with other options?",
      "createdAt": "2025-07-24T11:03:46Z",
      "updatedAt": "2025-09-08T22:31:14Z",
      "closedAt": null,
      "comments": [
        {
          "author": "mguetschow",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Or `Uri-Path-Short` to better express the grouping (and mutual exclusion) with `Uri-Path`?",
          "createdAt": "2025-07-24T13:03:35Z",
          "updatedAt": "2025-07-24T13:03:35Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "Interim narrowed to Uri-Path-XXX where XXX could be \"Short\", but people associate short paths with routing. So, in decreasing order of my preference, more suggestions for -02:\n\n* Uri-Path-Registered\n* Uri-Path-Well-Known\n* Uri-Path-Registered\n* Uri-Path-Compact\n* Uri-Path-Concise\n* Uri-Path-Constrained\n* Uri-Path-Tiny\n* Q-Uri-Path\n* Uri-Pth",
          "createdAt": "2025-08-27T15:25:20Z",
          "updatedAt": "2025-08-27T15:25:20Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "I'll toss in Uri-Path-Abbr -- that's an abbreviation in itself, and while our codes are not *exactly* like textual abbreviations, they do transform the Uri-Path option *ad breve*.",
          "createdAt": "2025-09-08T22:31:14Z",
          "updatedAt": "2025-09-08T22:31:14Z"
        }
      ]
    },
    {
      "number": 2,
      "id": "I_kwDOPRf_yM7CR_vJ",
      "title": "Link to .well-known/ registry?",
      "url": "https://github.com/core-wg/uri-path-abbrev/issues/2",
      "state": "CLOSED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [
        "chrysn"
      ],
      "labels": [],
      "body": "Strictly speaking our new registry is decoupled from the .well-known registry, but IIRC there was precedent for placing notes in registries if they become foreign keys of others, so maybe that's possible here even when it's not *exclusively* a foreign key.\n\nSee-Also: https://mailarchive.ietf.org/arch/msg/core/8JQplbquf6gBp1lDmpSZId4eGlI",
      "createdAt": "2025-07-24T11:06:48Z",
      "updatedAt": "2025-09-10T15:55:05Z",
      "closedAt": "2025-09-10T15:55:05Z",
      "comments": [
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "The rough feeling from the 2025-08-25 interim was that this would rather encourage people to register things they don't *really* need for IoT use cases, so let's not.",
          "createdAt": "2025-09-10T15:55:05Z",
          "updatedAt": "2025-09-10T15:55:05Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOPRf_yM7IGuLT",
      "title": "Allow Uri-Path prefixes?",
      "url": "https://github.com/core-wg/uri-path-abbrev/issues/9",
      "state": "CLOSED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "for-bis"
      ],
      "body": "For some potential use cases it may make sense for users to have Uri-Path prefixes.\n\n## Example\n\nIf IPSO smart objects had used this (say, with Short-Uri-Path 127 expanding to nothing but followed by an option value that's a CBOR sequence of integers to be expanded into decimal ASCII path segments:\n\n```\nShort-Uri-Path: (decimal) 127\nShort-Uri-Path: (CBORseq) 3, 0, 2, 12, 42\n```\n\nequivalent to\n\n```\nUri-Path: (text) 3\nUri-Path: (text) 0\n...\n```\n\nthen, given how LwM2M now allows some of it to be hosted under a prefix resource such as `/wherever/3/0/2/12/42`, it'd make perfect sense to express that with an Uri-Path option followed by Short-Uri-Path\n\n## The challenge\n\n\u2026 is to express this in a document without saying that it's a good idea to do it (it's not a bad idea either, but nothing *typical*), and in such a way that it is clear that unless someone actively uses that construction (e.g. they run such an IPSO server *and* chose in that very server implementation to allow a prefix), they don't need any special implementation of it, and the code they'd write if it were not for the section still satisfies all requirements?\n\n## The question\n\n* Is there any other reason not to allow it?\n* Can we come up with text that solves the challenge and is otherwise super compact?",
      "createdAt": "2025-08-26T21:41:59Z",
      "updatedAt": "2025-09-10T15:53:34Z",
      "closedAt": "2025-09-10T15:53:34Z",
      "comments": [
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "If we go with #14, this would clearly be only for there.",
          "createdAt": "2025-09-09T14:18:45Z",
          "updatedAt": "2025-09-09T14:18:45Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "Unless we re-open repeated use, I think we can safely close this as \"no\"; a document re-introducing repeated use can still do this.",
          "createdAt": "2025-09-10T15:52:37Z",
          "updatedAt": "2025-09-10T15:52:37Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDOPRf_yM7KlNj9",
      "title": "Give convincing use cases",
      "url": "https://github.com/core-wg/uri-path-abbrev/issues/15",
      "state": "OPEN",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "> Is this a good thing to do in the first place? Does it make a difference in practice?\n\nThis should be answered before finishing this.\n\nI do think that's the case, because sending CoAP requests in BLE advertisements should be a thing, and due to the [lake-req](https://www.ietf.org/archive/id/draft-ietf-lake-reqs-04.html)s, but it's better to have concrete numbers, or an example where a request straddles a fragmentation boundary.",
      "createdAt": "2025-09-09T14:32:57Z",
      "updatedAt": "2025-10-03T19:54:51Z",
      "closedAt": null,
      "comments": [
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "@mcr, do you have concrete bottlenecks in EST/BRSKI from which to get some fancy numbers from?",
          "createdAt": "2025-10-03T14:39:04Z",
          "updatedAt": "2025-10-03T14:39:04Z"
        },
        {
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I can give you some numbers for size of packet.\nSending the CSR likely involves a block1 (request size) transfer, so the savings in the CoAP path might be irrelevant.\nOn the /cacerts side, we might never exceed a 128-byte 802.15.4 request packet.\nOn the BRSKI voucher-request side, with CBOR encoding, I'll need to do some calculation.  My memory is that with block1, it's less than 3 fragments, but if we get it down to 2, great.\n",
          "createdAt": "2025-10-03T19:54:51Z",
          "updatedAt": "2025-10-03T19:54:51Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "I_kwDOPRf_yM7KzpI4",
      "title": "Process ED's WGA review",
      "url": "https://github.com/core-wg/uri-path-abbrev/issues/16",
      "state": "CLOSED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Main points: restructure client/server/proxy behavior, emphasize that stack components should not use it on the off chance it'd work, but only if there's reason (given by the application or the protocol) to assume it should work.\n\nOriginal archived at <https://mailarchive.ietf.org/arch/msg/core/yQI0KnoEYVQoZmqYhsSpoSHD6Dc>.",
      "createdAt": "2025-09-10T13:38:25Z",
      "updatedAt": "2025-09-25T15:41:53Z",
      "closedAt": "2025-09-25T15:41:53Z",
      "comments": []
    },
    {
      "number": 17,
      "id": "I_kwDOPRf_yM7Kztjz",
      "title": "Register /.well-known/edhoc",
      "url": "https://github.com/core-wg/uri-path-abbrev/issues/17",
      "state": "CLOSED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "I'm still looking for my notes on \"we could also use the EDHOC option for that\"\u2026",
      "createdAt": "2025-09-10T13:43:30Z",
      "updatedAt": "2025-09-10T15:41:25Z",
      "closedAt": "2025-09-10T15:41:25Z",
      "comments": [
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "Found them: <https://notes.ietf.org/20250724-edhoc-coap-enhancements#>\n\nPeople liked doing this better than introducing the EDHOC option w/o a CoAP option.\nThe notes from that side meeting don't show that, but to elaborate on what \"that weirdness\" is:\nWhen EDHOC option is used with OSCORE option, it's clear in the response if things went OK (OSCORE in response) or not (no OSCORE in response), and it's kind of piggy-backing the EDHOC message on nothing.",
          "createdAt": "2025-09-10T13:49:42Z",
          "updatedAt": "2025-09-10T13:49:42Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "Not making this into a PR while https://github.com/chrysn/shopinc/pull/18 is still around, as that'd be a sure merge conflict.",
          "createdAt": "2025-09-10T13:50:34Z",
          "updatedAt": "2025-09-10T13:53:50Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "I_kwDOPRf_yM7ORfg2",
      "title": "rfc7030 updates to include abbrieviations",
      "url": "https://github.com/core-wg/uri-path-abbrev/issues/23",
      "state": "OPEN",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "https://github.com/mcr/lamps-rfc7030-renewal-recommendation/pull/4\n\nPlease review this PR, @chrysn ",
      "createdAt": "2025-09-27T20:27:30Z",
      "updatedAt": "2025-09-27T20:27:30Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 24,
      "id": "I_kwDOPRf_yM7ORk3A",
      "title": "Track my data",
      "url": "https://github.com/core-wg/uri-path-abbrev/issues/24",
      "state": "CLOSED",
      "author": "Maumau123098",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Track all my data and I never I am a proof that really upset",
      "createdAt": "2025-09-27T20:45:15Z",
      "updatedAt": "2025-10-01T13:46:22Z",
      "closedAt": "2025-10-01T13:46:22Z",
      "comments": [
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "Closed and reported as spam.",
          "createdAt": "2025-10-01T13:46:22Z",
          "updatedAt": "2025-10-01T13:46:22Z"
        }
      ]
    },
    {
      "number": 25,
      "id": "I_kwDOPRf_yM7PCRl-",
      "title": "lipcoap initial port",
      "url": "https://github.com/core-wg/uri-path-abbrev/issues/25",
      "state": "OPEN",
      "author": "mrdeep1",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "I have done a quick port of this to the libcoap library (https://github.com/obgm/libcoap), but code has not yet been pushed.\n\nMy observations so far are\n\nFinal server  (knows about Uri-Path-Abbrev)\n-------------\nIt cannot handle Proxy-Uri and Ur-Path-Abbrev in the same request as decoding Proxy-Uri will usually give a set of Uri-Path unless there is no path in Proxy-Uri.  No path in Proxy-Uri may be a corner case.\nProxy-Scheme works fine.\n\nlibcoap currently rejects Uri-Path-Abbrev + { Uri-Path | Proxy-Uri } for simplicity.  It rejects a CON with 4.02, or a RST for NON.\n\nLegacy final server (does not know about Uri-Path-Abbrev)\n---------\nWith libcoap, receiving Uri-Path-Abbrev, it rejects a CON with 4.02, or a RST for NON.\n\nOriginal Client (knows about Uri-Path-Abbrev)\n-------------\nIf receipt of 4.02 and request contained Uri-Path-Abbrev, then libcoap retransmits the request with Uri-Path-Abbrev expanded into Uri-Path(s). The new request should have new Token and MID.\nRetry response then needs original Token when passing back to application.  Fairly straight forward to rebuild PDU with only Content-Format between Uri-Path and Uri-Path-Abbrev.\n\nQ: What should happen with a 5.02 response?\n\nLibcoap tags the CoAP session with 'no uri-path-abbrev support' on receipt of 4.02 so subsequent application requests on the same session gets Uri-Path-Abbrev expanded before transmission.\n\nUsing NON for the first Uri-Path-Abbrev gets a RST response, so CON should be used here.\n\nUnclear as to how Uri-Path-Abbrev should be used in a multicast environment (servers likely to drop 4.xx if overriding RFC7252 for NON or likely to drop RST responses)\n\nQ: How will multicast get handled?\n\n(legacy) Proxy - does not know Uri-Path-Abbrev)\n------------\nThe test  for critical option is early on in libcoap stack - before any proxy logic and so sends back a 4.02 or RST.\n\nIf proxy (safe-forward-test) test was to be done before critical option test then things should get properly forwarded.  If however there is a Proxy-Scheme and the proxy converts this and URI-* into Proxy-Uri (unlikely, libcoap does not do this) this will get rejected by upstream server.\n\nQ: If upstream server does not handle Uri-Path-Abbrev, would the legacy proxy send back a 5.02 or 4.02?\n\nNew Proxy - does know about Uri-Path-Abbrev\n--------------\nWill know not to reconstruct a Proxy-Uri if Uri-Path-Abbrev is present.\n\nThe proxy-client component acts as per libcoap client, namely on detection of 4.02 with Uri-Path-Abbrev in request will re-transmit the expanded request with nothing passed back to client.  If that fails, then the upstream server's response is passed back to downstream client.\n\nQ: Should this proxy send back a 4.02 or 5.02 on getting a 4.02 from upstream server when electing not to expand Uri-Path-Abbrev?\n\nQ: For caching responses, should the cached request (hash) include the Uri-Path-Abbrev, or should the proxy always (even if not forwarding it) expand the request and cache the expanded request (hash)\n",
      "createdAt": "2025-10-01T13:03:14Z",
      "updatedAt": "2025-10-03T14:32:06Z",
      "closedAt": null,
      "comments": [
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "Thanks. See mailing list thread for discussion; action items taken up for here:\n\n* Point out that a server could send RST -- I don't think it should, but at any rate, that's what deployed servers will do.\n* Address multicast [edit] and NON in general. Maybe \"Fallback is not a realistic option, so the 'SHOULD only send when server is known to support it' turns into a 'MUST'\"\n\n(See also [thread](https://mailarchive.ietf.org/arch/msg/core/dX1kxGgf2M_tS32liHHvCls8AFo))",
          "createdAt": "2025-10-01T16:03:18Z",
          "updatedAt": "2025-10-03T14:32:06Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "More action items: RST being allowed (and even if https://github.com/core-wg/corrclar/issues/52 were met with enthusiasm, it's out there) can cascade through proxies as 5.02.",
          "createdAt": "2025-10-03T14:08:03Z",
          "updatedAt": "2025-10-03T14:08:03Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "7252 says:\n\n> Unrecognized options of class \"critical\" that occur in a\n      Confirmable request MUST cause the return of a 4.02 (Bad Option)\n      response.  This response SHOULD include a diagnostic payload\n      describing the unrecognized option(s) (see [Section 5.5.2](https://www.rfc-editor.org/rfc/rfc7252#section-5.5.2)).\n\nI consider that plain bad advice, as a diagnostic payload is not actionable; this document should probably just state that we don't do that here (but suggest that when a client does want to be explicit, it can use RFC9290: Set Content-Format 257 and payload `a1270d` (`{/unprocessed-coap-option/-8:13}`)).",
          "createdAt": "2025-10-03T14:29:20Z",
          "updatedAt": "2025-10-03T14:29:20Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "I_kwDOPRf_yM7PhSid",
      "title": "Clarify 4.02 response for the case of NON requests",
      "url": "https://github.com/core-wg/uri-path-abbrev/issues/26",
      "state": "OPEN",
      "author": "EskoDijk",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "(see recent list discussion also) For the below requirement:\n\n> A server receiving the option with an unknown value MUST treat it as an unprocessable critical option, returning 4.02 Bad Option \n\nDoes this MUST also apply when the request is received as NON? It says \"returning 4.02\" but that seems not the specified behavior for NON requests.\nDo we want to override 7252 here, or not?\n\nMy view: better not override the 7252 behavior just for the Uri-Path-Abbrev option. If we want to correct/change 7252 for sending a 4.02 instead of RST or just dropping the message, for NON requests, then it should be generally done for the unknown critical option case maybe. Some discussion on this: https://github.com/core-wg/corrclar/issues/52\n\n",
      "createdAt": "2025-10-03T15:52:03Z",
      "updatedAt": "2025-10-03T15:52:03Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 3,
      "id": "PR_kwDOPRf_yM6gdTPM",
      "title": "Fix minor typos",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/3",
      "state": "MERGED",
      "author": "mguetschow",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-07-24T13:33:42Z",
      "updatedAt": "2025-08-26T19:39:31Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "main",
      "baseRefOid": "bec6d9da0b09a2a175a85a9e83e7e4842b88eb60",
      "headRepository": "mguetschow/shopinc",
      "headRefName": "patch-1",
      "headRefOid": "ae8006228fdea0c40aaa1000cb4754dbe3e45dd5",
      "closedAt": "2025-08-26T19:39:31Z",
      "mergedAt": "2025-08-26T19:39:31Z",
      "mergedBy": "chrysn",
      "mergeCommit": {
        "oid": "04fe9043885ad916657faaeacff4917e6b5dfb0e"
      },
      "comments": [
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "Thanks for the fixes. We've been working in parallel, and one has been addressed in 77f6c6f6ea64430a1827d766d867e51ffde95d7b.",
          "createdAt": "2025-08-26T19:39:28Z",
          "updatedAt": "2025-08-26T19:39:28Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOPRf_yM62XZO7",
          "commit": {
            "abbreviatedOid": "ae80062"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-07-27T15:02:34Z",
          "updatedAt": "2025-07-27T15:02:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOPRf_yM6g1YQA",
      "title": "Uri path short",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/4",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "rename to Uri-Path-Short",
      "createdAt": "2025-07-27T15:01:07Z",
      "updatedAt": "2025-09-10T15:44:25Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "main",
      "baseRefOid": "bec6d9da0b09a2a175a85a9e83e7e4842b88eb60",
      "headRepository": "mcr/shopinc",
      "headRefName": "uri-path-short",
      "headRefOid": "af7ada7b57b1b7eced79e97323dfdb67164f6d60",
      "closedAt": "2025-09-10T15:44:24Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "This closes: https://github.com/chrysn/shopinc/issues/1",
          "createdAt": "2025-08-26T19:41:36Z",
          "updatedAt": "2025-08-26T19:41:36Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "Closing in favor of #12 that switched to Uri-Path-Abbr -- that's not the end of #1, but at least it won't work with this PR due to the conflicts.",
          "createdAt": "2025-09-10T15:44:24Z",
          "updatedAt": "2025-09-10T15:44:24Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOPRf_yM68WNiD",
          "commit": {
            "abbreviatedOid": "af7ada7"
          },
          "author": "mguetschow",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "I do prefer this name as already mentioned in https://github.com/chrysn/shopinc/issues/1#issuecomment-3113394577 ",
          "createdAt": "2025-08-27T14:01:17Z",
          "updatedAt": "2025-08-27T14:01:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOPRf_yM6g1YRh",
      "title": "added mcr as co-author",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/5",
      "state": "MERGED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-07-27T15:01:15Z",
      "updatedAt": "2025-08-26T19:34:53Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "main",
      "baseRefOid": "bec6d9da0b09a2a175a85a9e83e7e4842b88eb60",
      "headRepository": "mcr/shopinc",
      "headRefName": "mcr-edits-202507",
      "headRefOid": "9b8ab843454d9269363cfa82ea579375db6f7675",
      "closedAt": "2025-08-26T19:34:52Z",
      "mergedAt": "2025-08-26T19:34:52Z",
      "mergedBy": "chrysn",
      "mergeCommit": {
        "oid": "b6056ed89250a3096585dcb1ea6a295020776caa"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 6,
      "id": "PR_kwDOPRf_yM6g1YWd",
      "title": "Subsequent options",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/6",
      "state": "CLOSED",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "(ignore first two commits, they are in other PRs, but can not change base when out-of-org)\r\nadded more details about subsequent options.",
      "createdAt": "2025-07-27T15:01:51Z",
      "updatedAt": "2025-09-10T15:49:45Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "main",
      "baseRefOid": "bec6d9da0b09a2a175a85a9e83e7e4842b88eb60",
      "headRepository": "mcr/shopinc",
      "headRefName": "subsequent-options",
      "headRefOid": "97616a6c6db8901c41be7d6f0839ab9b9d86636d",
      "closedAt": "2025-09-10T15:49:45Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "As there've been editing conflicts from me not pushing everything right away, I'm cherry-picking here a little:\r\n* \"split this important statement into new paragraph\": f0315983cec04d966402d1466191577b0551b4a4 became 6efd561a346155cd56ba67f500a161617cdfae0e\r\n* \"question: do we need to say more about proxies\": Answered in https://github.com/chrysn/shopinc/pull/7\r\n* Registering the EST/BRSKI paths is pulled out because it conflicted with the switch to uint values, now in https://github.com/chrysn/shopinc/pull/8\r\n\r\nWhat remains is applying #4, and ae804762fa177afe3087b90e11990db2a4d76100 (explicitly naming the rules), which there are open points on (roughly \"how to best recurse\" and \"is forbidden a sensible choice\", and \"remove the previous examples-of-rules, maybe even unifying the rules in one place only\").\r\n\r\nI suggest we talk about them in the upcoming interim, and then apply the rest of this PR (probably by copy-pasting due to the edit conflicts) considering whatever we find during the interim.",
          "createdAt": "2025-08-26T21:26:38Z",
          "updatedAt": "2025-08-26T21:26:38Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOPRf_yM62XeJB",
          "commit": {
            "abbreviatedOid": "ba517d9"
          },
          "author": "cabo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-27T16:17:40Z",
          "updatedAt": "2025-07-27T16:17:41Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "\"comes in two forms\" not good.\r\n\r\n\u2794 \r\n\r\nThe option value of the first U-P-S Option controls whether further U-P-S Options are allowed and how they are interpreted.",
              "createdAt": "2025-07-27T16:17:41Z",
              "updatedAt": "2025-07-27T16:19:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPRf_yM62XePF",
          "commit": {
            "abbreviatedOid": "ba517d9"
          },
          "author": "cabo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-27T16:19:13Z",
          "updatedAt": "2025-07-27T16:19:13Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "```suggestion\r\n* all initial options contain an opaque sequence of bytes, exactly like {{!RFC7252, Section 3.2}}'s opaque encoding.\r\n```",
              "createdAt": "2025-07-27T16:19:13Z",
              "updatedAt": "2025-07-27T16:19:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPRf_yM62XeSV",
          "commit": {
            "abbreviatedOid": "ba517d9"
          },
          "author": "cabo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-27T16:20:06Z",
          "updatedAt": "2025-07-27T16:20:06Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "We don't have to say anything here if we don't know what we want to say.  Except that the meaning and possible values are controlled by the first U-P-S option.",
              "createdAt": "2025-07-27T16:20:06Z",
              "updatedAt": "2025-07-27T16:20:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPRf_yM62XeTf",
          "commit": {
            "abbreviatedOid": "ba517d9"
          },
          "author": "cabo",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-27T16:20:27Z",
          "updatedAt": "2025-07-27T16:20:27Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "\"short option\"?\r\n",
              "createdAt": "2025-07-27T16:20:27Z",
              "updatedAt": "2025-07-27T16:20:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPRf_yM62XihP",
          "commit": {
            "abbreviatedOid": "97616a6"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-27T17:15:23Z",
          "updatedAt": "2025-07-27T17:15:24Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "```suggestion\r\nThe option value of the first U-P-S Option controls whether further U-P-S Options are allowed and how they are interpreted.\r\n```",
              "createdAt": "2025-07-27T17:15:23Z",
              "updatedAt": "2025-07-27T17:15:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPRf_yM62XijY",
          "commit": {
            "abbreviatedOid": "97616a6"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-27T17:16:01Z",
          "updatedAt": "2025-07-27T17:16:01Z",
          "comments": [
            {
              "originalPosition": 66,
              "body": "Does each UPS option control what happens after it, if it's not a string?",
              "createdAt": "2025-07-27T17:16:01Z",
              "updatedAt": "2025-07-27T17:16:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPRf_yM62Xilj",
          "commit": {
            "abbreviatedOid": "97616a6"
          },
          "author": "mcr",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-07-27T17:16:36Z",
          "updatedAt": "2025-07-27T17:16:37Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "```suggestion\r\nWhether subsequent options contain a uint or a string is determined by the definition of the option in the {{registry}}.\r\n```",
              "createdAt": "2025-07-27T17:16:37Z",
              "updatedAt": "2025-07-27T17:16:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPRf_yM68MJHI",
          "commit": {
            "abbreviatedOid": "97616a6"
          },
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-26T21:00:54Z",
          "updatedAt": "2025-08-26T21:00:54Z",
          "comments": [
            {
              "originalPosition": 185,
              "body": "Chaining directly into this registry doesn't make sense for many values (`/.well-known/brski/.well-known/edhoc`?), and also doesn't need the CBOR escape hatch of not having the MSB set. I'd rather have those documents specify their own list, either hardcoded in their specification or using a registry mechanism available to them.",
              "createdAt": "2025-08-26T21:00:54Z",
              "updatedAt": "2025-08-26T21:00:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPRf_yM68MKk6",
          "commit": {
            "abbreviatedOid": "97616a6"
          },
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-26T21:03:34Z",
          "updatedAt": "2025-08-26T21:03:34Z",
          "comments": [
            {
              "originalPosition": 191,
              "body": "Thata'd be MUST NOT send and MUST ignore, which is practically unusable if one decides otherwise later. (\"Practically\", because those options could give hints, but Uri-Path-ish are not typically used in a hinting fashion).\r\n\r\nIn 9b60ac087f2259700e19d88f8f75ce8ca932867f I rather suggest going with unspecified or plain initial+path; as an implementer I don't think that's harder to do (as the options are critical and thus need to be processed anyway).",
              "createdAt": "2025-08-26T21:03:34Z",
              "updatedAt": "2025-08-26T21:03:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPRf_yM68MXgZ",
          "commit": {
            "abbreviatedOid": "ae80476"
          },
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-08-26T21:25:30Z",
          "updatedAt": "2025-08-26T21:25:31Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "With the new text, the whole \"examples of rules\" can go out; let's have one or two places only to list them (currently it's two, the text in the option description and the choices for IANA, but I'd prefer to unify them.)",
              "createdAt": "2025-08-26T21:25:30Z",
              "updatedAt": "2025-08-26T21:25:31Z"
            }
          ]
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDOPRf_yM6le9Kc",
      "title": "Proxy statement",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/7",
      "state": "MERGED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Recommend that proxies pass on unknown values\r\n    \r\nThis picks up a point by @mcr from https://github.com/chrysn/shopinc/pull/6: \"what does a CoAP/HTTP proxy do if it sees Uri-Path-Short options for which it does not have knowledge?\"\r\n\r\nAnother commit completes a sentence; this is bycatch from processing where that question would have been inserted.",
      "createdAt": "2025-08-26T20:25:02Z",
      "updatedAt": "2025-08-26T21:28:12Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "main",
      "baseRefOid": "04fe9043885ad916657faaeacff4917e6b5dfb0e",
      "headRepository": "core-wg/uri-path-abbrev",
      "headRefName": "proxy-statement",
      "headRefOid": "f143d326613661ff802bababa19f136c1a2f058a",
      "closedAt": "2025-08-26T21:27:28Z",
      "mergedAt": "2025-08-26T21:27:28Z",
      "mergedBy": "chrysn",
      "mergeCommit": {
        "oid": "51b1e4760a1a240d96eeca7500d4f582c8780e83"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 8,
      "id": "PR_kwDOPRf_yM6lfDee",
      "title": "Add /.w-k/brski and /.w-k/est",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/8",
      "state": "MERGED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Based on https://github.com/chrysn/shopinc/pull/6\r\n\r\nThis does not pick up other parts of that issue due to editing conflicts; the text after this PR is a bit under-specified because so far adding repeated options is just an example, and suddenly we rely on that behavior, but that'll be cleaned up applying the rest of #6.",
      "createdAt": "2025-08-26T20:37:41Z",
      "updatedAt": "2025-08-26T21:28:08Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "main",
      "baseRefOid": "6efd561a346155cd56ba67f500a161617cdfae0e",
      "headRepository": "core-wg/uri-path-abbrev",
      "headRefName": "brski-est",
      "headRefOid": "ff57fc26bcc323f272144002594cc26c261d61ba",
      "closedAt": "2025-08-26T21:27:50Z",
      "mergedAt": "2025-08-26T21:27:50Z",
      "mergedBy": "chrysn",
      "mergeCommit": {
        "oid": "56bbdfd68c1ac24e599616ac2b51dedb70ce490f"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 10,
      "id": "PR_kwDOPRf_yM6lpKAg",
      "title": "expound further on encoding as int",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/10",
      "state": "OPEN",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "explain the format of the option in more detail.",
      "createdAt": "2025-08-27T17:12:26Z",
      "updatedAt": "2025-08-27T17:12:26Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "main",
      "baseRefOid": "66fd4b0d5eedf6c96f9e1ad36598074b0dd88165",
      "headRepository": "mcr/shopinc",
      "headRefName": "better-option-description",
      "headRefOid": "e82144cb82bf45466bad26ef918ec16db7ac82ee",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 11,
      "id": "PR_kwDOPRf_yM6lpOnl",
      "title": "expound further on encoding as CBOR",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/11",
      "state": "OPEN",
      "author": "mcr",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This explores using CBOR to encode the contents, and is an *alternative* to #10.\r\n",
      "createdAt": "2025-08-27T17:18:42Z",
      "updatedAt": "2025-08-27T17:28:00Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "main",
      "baseRefOid": "66fd4b0d5eedf6c96f9e1ad36598074b0dd88165",
      "headRepository": "mcr/shopinc",
      "headRefName": "cbor-option-description",
      "headRefOid": "181c37e698d15fc1e38e9de5e4b8dcc088d28782",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 12,
      "id": "PR_kwDOPRf_yM6neouR",
      "title": "Prepare -02",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/12",
      "state": "MERGED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "The last interim (minutes currently [in the pad](https://notes.ietf.org/notes-ietf-interim-2025-core-12-core#)) left us with good input to be processed, but one thing sounded urgent:\r\n\r\nSwitch to standards track so that when there's an adoption call, there's no confusion.\r\n\r\nApart from that bare minimum for -02, it also pulls in an option name change, since apparently nobody was happy with it. It picks up the Uri-Path-X pattern people [seem to like](https://github.com/chrysn/shopinc/issues/1), and chooses something self-referentially abbreviated as the suffix.",
      "createdAt": "2025-09-08T22:45:03Z",
      "updatedAt": "2025-09-09T14:25:02Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "main",
      "baseRefOid": "ddf213e19ccebe859ba83d01903015aaa95e0411",
      "headRepository": "core-wg/uri-path-abbrev",
      "headRefName": "prep-02",
      "headRefOid": "ccfd7e3ffa9b4153eb4b89ddb7c12b6a4e2cd284",
      "closedAt": "2025-09-09T14:24:46Z",
      "mergedAt": "2025-09-09T14:24:46Z",
      "mergedBy": "chrysn",
      "mergeCommit": {
        "oid": "d6fab993ee6633af7ee8dfd57903187fe8da6fb2"
      },
      "comments": [
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "Even though we discussed making the \"later options are strings\" the default, I'm belaying that because it could be obsolete easily by https://mailarchive.ietf.org/arch/msg/core/XY415jBcPDySl7OkVy6OFooXgrQ",
          "createdAt": "2025-09-09T10:19:11Z",
          "updatedAt": "2025-09-09T10:19:11Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 13,
      "id": "PR_kwDOPRf_yM6nk-hR",
      "title": "EST, cBRSKI: Use per-resource numbers",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/13",
      "state": "CLOSED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "This change enhances wire sizes a bit (instead of 3 byte short-path option, I've chosen bigger numbers to not use up 5% of the 255 valuable points, but went with 4 bytes -- but then it saves 1+2 / 1+3 / 1+4 extra bytes for the repeated option), and more importantly it should simplify implementations: They don't even have to do the repeated option processing, but can just look at just the numeric value.\r\n\r\nSee also thread at https://mailarchive.ietf.org/arch/msg/core/gAukByI9jpUkJeHHu1RW-jepoa0\r\n\r\n@mcr, does that work for you?",
      "createdAt": "2025-09-09T10:43:20Z",
      "updatedAt": "2025-09-10T15:41:50Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "prep-02",
      "baseRefOid": "2adb842f2bd3d93c5fbdd494a6942d9667a3e7cb",
      "headRepository": "core-wg/uri-path-abbrev",
      "headRefName": "brsk-explicit",
      "headRefOid": "2afcb18b19a03a5a00548da71ab0582aadd9a45d",
      "closedAt": "2025-09-09T14:25:01Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "*Of course* building PRs on top of each other would still not work in GitHub in 2025 \u2026 as I can't reopen this in plac, I <del>may need to re-create this on a new number</del> re-opened this as #18.",
          "createdAt": "2025-09-09T14:26:12Z",
          "updatedAt": "2025-09-10T13:53:40Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 14,
      "id": "PR_kwDOPRf_yM6nnvan",
      "title": "Distinguish between basic and extended use",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/14",
      "state": "CLOSED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "for-bis"
      ],
      "body": "If #13 is the way to go, making \"append text string\" a default is kind'a unjustified because we don't use it.\r\n\r\nMight even go further and leave the whole \"extended\" thing for later docs \u2013 why spend time on something we have no idea if there's ever a good use case.",
      "createdAt": "2025-09-09T14:17:45Z",
      "updatedAt": "2025-09-10T15:53:53Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "brsk-explicit",
      "baseRefOid": "2afcb18b19a03a5a00548da71ab0582aadd9a45d",
      "headRepository": "core-wg/uri-path-abbrev",
      "headRefName": "basic-extended",
      "headRefOid": "b916c965eb33f7825da396a0eb42c2bf1eac4c99",
      "closedAt": "2025-09-10T15:40:15Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "When this PR is merged, this needs to happen manually, as it points to a to-be-deleted branch rather than main.",
          "createdAt": "2025-09-10T13:54:47Z",
          "updatedAt": "2025-09-10T13:54:47Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "Updated after today's interim to the more radical approach of not even specifying repeated use here -- after all, we're out of examples since #18 (which was taken up positively in the interim).",
          "createdAt": "2025-09-10T15:38:03Z",
          "updatedAt": "2025-09-10T15:38:03Z"
        },
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "Merged in b3a5b6699e0f070428f44ee0cc606b98ff1763ae",
          "createdAt": "2025-09-10T15:40:16Z",
          "updatedAt": "2025-09-10T15:40:16Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 18,
      "id": "PR_kwDOPRf_yM6n0vcV",
      "title": "EST, cBRSKI: Use per-resource numbers",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/18",
      "state": "MERGED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "(This PR replaces #13 that was created under the wrong assumption that GitHub would learn to sensibly handle PRs building on each other.)\r\n\r\nThis change enhances wire sizes a bit (instead of 3 byte short-path option, I've chosen bigger numbers to not use up 5% of the 255 valuable points, but went with 4 bytes -- but then it saves 1+2 / 1+3 / 1+4 extra bytes for the repeated option), and more importantly it should simplify implementations: They don't even have to do the repeated option processing, but can just look at just the numeric value.\r\n\r\nSee also thread at https://mailarchive.ietf.org/arch/msg/core/gAukByI9jpUkJeHHu1RW-jepoa0\r\n\r\n@mcr, does that work for you?",
      "createdAt": "2025-09-10T13:53:13Z",
      "updatedAt": "2025-09-10T15:42:03Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "main",
      "baseRefOid": "d6fab993ee6633af7ee8dfd57903187fe8da6fb2",
      "headRepository": "core-wg/uri-path-abbrev",
      "headRefName": "brsk-explicit2",
      "headRefOid": "2afcb18b19a03a5a00548da71ab0582aadd9a45d",
      "closedAt": "2025-09-10T15:39:32Z",
      "mergedAt": "2025-09-10T15:39:32Z",
      "mergedBy": "chrysn",
      "mergeCommit": {
        "oid": "770219d62428e96a2f588e4a1b594e04c6723716"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 19,
      "id": "PR_kwDOPRf_yM6n0x_2",
      "title": "Register EDHOC",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/19",
      "state": "MERGED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Closes: https://github.com/chrysn/shopinc/issues/17\r\n\r\n(Please ignore the earlier commits, this is built on #18)",
      "createdAt": "2025-09-10T13:56:46Z",
      "updatedAt": "2025-09-10T15:41:34Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "main",
      "baseRefOid": "d6fab993ee6633af7ee8dfd57903187fe8da6fb2",
      "headRepository": "core-wg/uri-path-abbrev",
      "headRefName": "edhoc",
      "headRefOid": "f71d9ff9cd49ce054e7ae6fbc30e49a48ffbe6fb",
      "closedAt": "2025-09-10T15:41:25Z",
      "mergedAt": "2025-09-10T15:41:25Z",
      "mergedBy": "chrysn",
      "mergeCommit": {
        "oid": "d21fea9d3543565b83e8f55f0a8036c849921433"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 20,
      "id": "PR_kwDOPRf_yM6n2IMS",
      "title": "s/unfortuante consequences/consequences/",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/20",
      "state": "MERGED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "With all other parts cherry-picked, manually cherry-picked or obsolete, this now:\r\n\r\nCloses: https://github.com/chrysn/shopinc/pull/6",
      "createdAt": "2025-09-10T15:48:20Z",
      "updatedAt": "2025-09-10T15:50:13Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "main",
      "baseRefOid": "d21fea9d3543565b83e8f55f0a8036c849921433",
      "headRepository": "core-wg/uri-path-abbrev",
      "headRefName": "pr6-bis",
      "headRefOid": "0ec73102ad9d8e10cbe5e8a74dc0b7956c3df6b0",
      "closedAt": "2025-09-10T15:49:44Z",
      "mergedAt": "2025-09-10T15:49:44Z",
      "mergedBy": "chrysn",
      "mergeCommit": {
        "oid": "a80f8581a3cdb81351e02f42cea50ca77b741eb9"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 21,
      "id": "PR_kwDOPRf_yM6qdcp_",
      "title": "Enhancements from ED: Restructure, warn against unjustified use",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/21",
      "state": "MERGED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [
        "chrysn"
      ],
      "labels": [],
      "body": "Closes: https://github.com/core-wg/uri-path-abbrev/issues/16\r\n\r\nGeneric clients just using the option and then failing are not, as requested, blocked by a MUST, but by two consecutive SHOULD: A generic client SHOULD not do that in the first place (or risk excessive resource abuse), and every client SHOULD fall back (or risk loss of interoperability). @EskoDijk, do we need to strictly forbid the combined violation, or is this language sufficient?",
      "createdAt": "2025-09-25T09:06:42Z",
      "updatedAt": "2025-09-26T23:24:49Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "main",
      "baseRefOid": "706a6afa7b76044cd27184b5e4ce86d22bd0bfdf",
      "headRepository": "core-wg/uri-path-abbrev",
      "headRefName": "ed-review-bis",
      "headRefOid": "e71a7dec97081b67b35b71b3644f8a6842038cae",
      "closedAt": "2025-09-25T15:41:52Z",
      "mergedAt": "2025-09-25T15:41:52Z",
      "mergedBy": "chrysn",
      "mergeCommit": {
        "oid": "7350ab19f1df3560ceb0d20a55fbeed9c3c9154d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOPRf_yM7CtWeb",
          "commit": {
            "abbreviatedOid": "59071af"
          },
          "author": "EskoDijk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks, I'm ok with the proposed description using \"SHOULD (NOT)\". A few comments added.",
          "createdAt": "2025-09-25T09:17:19Z",
          "updatedAt": "2025-09-25T09:23:22Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "```suggestion\r\nIn general, it is too unlikely that the Uri-Path-Abbrev value is understood by a generic server,\r\n```\r\n\r\nOr we could say \"by a server\" or \"by a typical server\" ?",
              "createdAt": "2025-09-25T09:17:19Z",
              "updatedAt": "2025-09-25T09:23:22Z"
            },
            {
              "originalPosition": 50,
              "body": "```suggestion\r\nand the message size savings in the successful case are dwarved by the almost doubling of resources needed to perform the fallback.\r\n```\r\n",
              "createdAt": "2025-09-25T09:20:37Z",
              "updatedAt": "2025-09-25T09:23:22Z"
            },
            {
              "originalPosition": 60,
              "body": "```suggestion\r\n* Rearrange content to have dedicated server, client and proxy subsections for option processing.\r\n```",
              "createdAt": "2025-09-25T09:21:53Z",
              "updatedAt": "2025-09-25T09:23:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPRf_yM7Cz682",
          "commit": {
            "abbreviatedOid": "59071af"
          },
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-25T15:37:54Z",
          "updatedAt": "2025-09-25T15:37:55Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "```suggestion\r\nIn general, it is too unlikely that the Uri-Path-Abbrev value is understood by any server,\r\n```\r\n\r\nMaybe like this?",
              "createdAt": "2025-09-25T15:37:55Z",
              "updatedAt": "2025-09-25T15:37:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOPRf_yM7C9aEz",
          "commit": {
            "abbreviatedOid": "59071af"
          },
          "author": "EskoDijk",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2025-09-26T08:35:34Z",
          "updatedAt": "2025-09-26T08:35:35Z",
          "comments": [
            {
              "originalPosition": 49,
              "body": "Ok!",
              "createdAt": "2025-09-26T08:35:34Z",
              "updatedAt": "2025-09-26T08:35:35Z"
            }
          ]
        }
      ]
    },
    {
      "number": 22,
      "id": "PR_kwDOPRf_yM6qigu5",
      "title": "Follow-ups to Esko's review / #21",
      "url": "https://github.com/core-wg/uri-path-abbrev/pull/22",
      "state": "MERGED",
      "author": "chrysn",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "Talking about proxies this explicitly begs the question for cross-proxies; cleaning up the proxy paragraph to enable that.\r\n\r\n(And linking to https://github.com/core-wg/corrclar/issues/51 now that I've made an issue rather than just talking about that we might maybe want to perhaps discuss this somewhere around over there-ish).",
      "createdAt": "2025-09-25T15:44:57Z",
      "updatedAt": "2025-09-26T23:24:49Z",
      "baseRepository": "core-wg/uri-path-abbrev",
      "baseRefName": "main",
      "baseRefOid": "7350ab19f1df3560ceb0d20a55fbeed9c3c9154d",
      "headRepository": "core-wg/uri-path-abbrev",
      "headRefName": "post-ed",
      "headRefOid": "dcbc2318a339259441bcc406d2f2fb6e9b6be269",
      "closedAt": "2025-09-26T23:24:30Z",
      "mergedAt": "2025-09-26T23:24:30Z",
      "mergedBy": "chrysn",
      "mergeCommit": {
        "oid": "705149196d5ad716fc6939e339b27776c1c8d683"
      },
      "comments": [
        {
          "author": "chrysn",
          "authorAssociation": "MEMBER",
          "body": "This also adds an introduction section now, and implementation status.\r\n\r\naiocoap implementation is in https://codeberg.org/aiocoap/aiocoap/pulls/36 -- but that's going to be merged this afternoon, so no point in sending the reader to the PR.",
          "createdAt": "2025-09-26T11:56:12Z",
          "updatedAt": "2025-09-26T11:56:40Z"
        }
      ],
      "reviews": []
    }
  ]
}